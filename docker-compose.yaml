services:
  inventree-db:
    image: postgres:17
    container_name: inventree-db
    environment:
      PGDATA: /var/lib/postgresql/data/pgdb
      POSTGRES_USER: ${INVENTREE_DB_USER}
      POSTGRES_PASSWORD: ${INVENTREE_DB_PASSWORD}
      POSTGRES_DB: ${INVENTREE_DB_NAME}
    volumes:
      - inventree_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${INVENTREE_DB_USER} -d ${INVENTREE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  inventree-cache:
    image: redis:7-alpine
    container_name: inventree-cache
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  inventree-server:
    image: inventree/inventree:${INVENTREE_TAG:-stable}
    container_name: inventree-server
    env_file: .env
    ports:
      - "8082:8000"
    depends_on:
      inventree-db:
        condition: service_healthy
      inventree-cache:
        condition: service_started
    volumes:
      - inventree_data:/home/inventree/data
      - inventree_media:/home/inventree/data/media
      - inventree_static:/home/inventree/static
    # Expose the app to the proxy only
    expose:
      - "8000"
    restart: unless-stopped

  inventree-worker:
    image: inventree/inventree:${INVENTREE_TAG:-stable}
    container_name: inventree-worker
    env_file: .env
    command: ["invoke", "worker"]
    depends_on:
      inventree-db:
        condition: service_healthy
      inventree-cache:
        condition: service_started
    volumes:
      - inventree_data:/home/inventree/data
      - inventree_media:/home/inventree/data/media
    restart: unless-stopped

#  inventree-proxy:
#    image: caddy:2
#    container_name: inventree-proxy
#    depends_on:
#      - inventree-server
#    ports:
 #     - "80:80"
 #     - "443:443"
  #  environment:
   #   # Optional: set email for Let's Encrypt
    #  - ACME_AGREE=true
   # volumes:
   #   - inventree_caddy_data:/data
   #   - inventree_caddy_config:/config
   #   - ./Caddyfile:/etc/caddy/Caddyfile:ro
   # restart: unless-stopped

volumes:
  inventree_db:
  inventree_data:
  inventree_media:
  inventree_static:
  inventree_caddy_data:
  inventree_caddy_config:
